<?xml version="1.0" encoding="utf-8"?>
<resources>
  <declare-styleable name="RoundedImageView">
    <attr name="riv_corner_radius" format="dimension" />
    <attr name="riv_corner_radius_top_left" format="dimension" />
    <attr name="riv_corner_radius_top_right" format="dimension" />
    <attr name="riv_corner_radius_bottom_left" format="dimension" />
    <attr name="riv_corner_radius_bottom_right" format="dimension" />
    <attr name="riv_border_width" format="dimension" />
    <attr name="riv_border_color" format="color" />
    <attr name="riv_mutate_background" format="boolean" />
    <attr name="riv_oval" format="boolean" />
    <attr name="android:scaleType" />
    <attr name="riv_tile_mode">
      <enum name="clamp" value="0" />
      <enum name="repeat" value="1" />
      <enum name="mirror" value="2" />
    </attr>
    <attr name="riv_tile_mode_x">
      <enum name="clamp" value="0" />
      <enum name="repeat" value="1" />
      <enum name="mirror" value="2" />
    </attr>
    <attr name="riv_tile_mode_y">
      <enum name="clamp" value="0" />
      <enum name="repeat" value="1" />
      <enum name="mirror" value="2" />
    </attr>
  </declare-styleable>

  <attr name="siArrowPosition">
    <enum name="left" value="0" />
    <enum name="right" value="1" />
  </attr>
  <attr name="siBorderType">
    <enum name="stroke" value="0" />
    <enum name="fill" value="1" />
  </attr>
  <attr name="siStrokeCap">
    <enum name="butt" value="0" />
    <enum name="round" value="1" />
    <enum name="square" value="2" />
  </attr>
  <attr name="siStrokeJoin">
    <enum name="bevel" value="0" />
    <enum name="miter" value="1" />
    <enum name="round" value="2" />
  </attr>

  <declare-styleable name="ShaderImageView">
    <attr name="siSquare" format="boolean" />
    <attr name="siBorderColor" format="color" />
    <attr name="siBorderWidth" format="dimension" />
    <attr name="siBorderAlpha" format="float" />
    <attr name="siForeground" format="integer|reference" />
    <!-- Rounded Image View -->
    <attr name="siRadius" format="dimension" />
    <!--BubbleImageView-->
    <attr name="siArrowPosition"/>
    <attr name="siTriangleHeight" format="dimension"/>
    <!--PorterImageView-->
    <attr name="siShape" format="integer|reference" />
    <!--ShaderImageView-->
    <attr name="siBorderType"/>
    <attr name="siStrokeCap"/>
    <attr name="siStrokeJoin"/>
    <attr name="siStrokeMiter" format="dimension" />
  </declare-styleable>


  <declare-styleable name="PagerSlidingTabStrip">
    <attr name="pstsIndicatorColor" format="color" />
    <attr name="pstsUnderlineColor" format="color" />
    <attr name="pstsDividerColor" format="color" />
    <attr name="pstsIndicatorHeight" format="dimension" />
    <attr name="pstsUnderlineHeight" format="dimension" />
    <attr name="pstsDividerPadding" format="dimension" />
    <attr name="pstsTabPaddingLeftRight" format="dimension" />
    <attr name="pstsScrollOffset" format="dimension" />
    <attr name="pstsTabBackground" format="reference" />
    <attr name="pstsShouldExpand" format="boolean" />
    <attr name="pstsTextAllCaps" format="boolean" />
    <attr name="selectedTabTextColor" format="color" />
  </declare-styleable>

  <declare-styleable name="PullScrollView">
    <attr name="header" format="reference" />
    <attr name="headerHeight" format="dimension" />
    <attr name="headerVisibleHeight" format="dimension" />
  </declare-styleable>

  <attr name="direction">
    <enum name="rightToLeft" value="0" />
    <enum name="bottomToTop" value="1" />
    <enum name="leftToRight" value="2" />
    <enum name="topToBottom" value="3" />
  </attr>

  <declare-styleable name="MultiDirectionSlidingDrawer">
    <attr name="handle" format="reference" />
    <attr name="content" format="reference" />
    <attr name="direction" />
    <attr name="bottomOffset" format="dimension"  />
    <attr name="topOffset" format="dimension"  />
    <attr name="allowSingleTap" format="boolean" />
    <attr name="animateOnClick" format="boolean" />
  </declare-styleable>

  <declare-styleable name="AlphaBetIndexerBar">
    <attr name="index_search" format="boolean" />
  </declare-styleable>

  <!--评价控件-->
  <declare-styleable name="HorizontalProgressBarWithNumber">
    <attr name="progress_unreached_color" format="color" />
    <attr name="progress_reached_color" format="color" />
    <attr name="progress_reached_bar_height" format="dimension" />
    <attr name="progress_unreached_bar_height" format="dimension" />
    <attr name="progress_text_size" format="dimension" />
    <attr name="progress_text_color" format="color" />
    <attr name="progress_text_offset" format="dimension" />
    <attr name="progress_text_visibility" format="enum">
      <enum name="visible" value="0" />
      <enum name="invisible" value="1" />
    </attr>
  </declare-styleable>

  <declare-styleable name="RoundProgressBarWidthNumber">
    <attr name="radius" format="dimension" />
  </declare-styleable>

  <declare-styleable name="ExpandableTextView">
    <attr name="maxCollapsedLines" format="integer"/>
    <attr name="animDuration" format="integer"/>
    <attr name="animAlphaStart" format="float"/>
    <attr name="expandDrawable" format="reference"/>
    <attr name="collapseDrawable" format="reference"/>
  </declare-styleable>


  <declare-styleable name="PullToRefresh">

    <!-- A drawable to use as the background of the Refreshable View -->
    <attr name="ptrRefreshableViewBackground" format="reference|color" />

    <!-- A drawable to use as the background of the Header and Footer Loading Views -->
    <attr name="ptrHeaderBackground" format="reference|color" />

    <!-- Text Color of the Header and Footer Loading Views -->
    <attr name="ptrHeaderTextColor" format="reference|color" />

    <!-- Text Color of the Header and Footer Loading Views Sub Header -->
    <attr name="ptrHeaderSubTextColor" format="reference|color" />

    <!-- Mode of Pull-to-Refresh that should be used -->
    <attr name="ptrMode">
      <flag name="disabled" value="0x0" />
      <flag name="pullFromStart" value="0x1" />
      <flag name="pullFromEnd" value="0x2" />
      <flag name="both" value="0x3" />
      <flag name="manualOnly" value="0x4" />

      <!-- These last two are depreacted -->
      <flag name="pullDownFromTop" value="0x1" />
      <flag name="pullUpFromBottom" value="0x2" />
    </attr>

    <!-- Whether the Indicator overlay(s) should be used -->
    <attr name="ptrShowIndicator" format="reference|boolean" />

    <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
    <attr name="ptrDrawable" format="reference" />

    <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
    <attr name="ptrDrawableStart" format="reference" />

    <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
    <attr name="ptrDrawableEnd" format="reference" />

    <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
    <attr name="ptrOverScroll" format="reference|boolean" />

    <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
    <attr name="ptrHeaderTextAppearance" format="reference" />

    <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
    <attr name="ptrSubHeaderTextAppearance" format="reference" />

    <!-- Style of Animation should be used displayed when pulling. -->
    <attr name="ptrAnimationStyle">
      <flag name="rotate" value="0x0" />
      <flag name="flip" value="0x1" />
    </attr>

    <!-- Whether the user can scroll while the View is Refreshing -->
    <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

    <!--
        Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        able to scroll while refreshing, and behaves better. It acheives this by adding
        Header and/or Footer Views to the ListView.
    -->
    <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

    <!--
        Whether the Drawable should be continually rotated as you pull. This only
        takes effect when using the 'Rotate' Animation Style.
    -->
    <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

    <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
    <attr name="ptrAdapterViewBackground" format="reference|color" />
    <attr name="ptrDrawableTop" format="reference" />
    <attr name="ptrDrawableBottom" format="reference" />
  </declare-styleable>

  <declare-styleable name="CircleImageView">
    <attr name="civ_border_width" format="dimension" />
    <attr name="civ_border_color" format="color" />
    <attr name="civ_border_overlay" format="boolean" />
    <attr name="civ_fill_color" format="color" />
  </declare-styleable>
</resources>
